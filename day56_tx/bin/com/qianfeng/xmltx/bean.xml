<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    	 http://www.springframework.org/schema/beans/spring-beans.xsd
     	 http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd
         http://www.springframework.org/schema/tx
     	 http://www.springframework.org/schema/tx/spring-tx.xsd">
     	 
     <context:component-scan base-package="com.qianfeng.xmltx"></context:component-scan>
     	
     	
     <!--  数据源对象: C3P0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/hib1804"></property>
		<property name="user" value="root"></property>
		<property name="password" value="root"></property>
		<property name="initialPoolSize" value="3"></property>
		<property name="maxPoolSize" value="10"></property>
		<property name="maxStatements" value="100"></property>
		<property name="acquireIncrement" value="2"></property>
	</bean>
		
	<!--  JdbcTemplate工具类实例 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- spring中事务的配置 -->
	<!-- 1配置事务管理类，不同的数据库操作方法，对应的管理类不同 -->
   	<bean id="txManage" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   		<!-- 注入连接池的对象 -->
   		<property name="dataSource" ref="dataSource"></property>
   	</bean>
   
   <!-- 2配置事务的增强（通知） 针对什么样的方法，采用什么样的事务处理方式
   		指定事务管理类对象
    -->
   <tx:advice id="txAdvice" transaction-manager="txManage">
   		<tx:attributes>
   			<!-- 针对add开头的方法，事务处理时，只读属性=false、
   				read-only 是否只读，如果进行增删改，必须设为false，如果是查询，设为true
   				propagation 事务的传播特性
   			 -->
   			<tx:method name="add*" read-only="false" propagation="REQUIRED"/>
   			<tx:method name="delete*" read-only="false" propagation="REQUIRED"/>
   			
   		</tx:attributes>
   </tx:advice>
   
   <!-- 3AOP配置 -->
   <aop:config>
   		<!-- 切入点 -->
   		<aop:pointcut expression="execution(* com.qianfeng.xmltx.UserService.*(..))" id="pc"/>
   		<!-- 针对spring中事务的配置，不需要配置切面类，spring内部根据事务操作，集成了切面类 -->
   		<!-- 但是，需要告知spring，相关的方法，需要采用什么样的事务处理策略（方式） -->
   		<!-- 通知 -->
   		<aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>
   
   </aop:config>
     	 
 </beans>
 
 
 
 